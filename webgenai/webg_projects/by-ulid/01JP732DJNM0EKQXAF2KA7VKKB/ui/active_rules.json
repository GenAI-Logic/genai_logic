[
    {
        "name": "Customer Balance Rule",
        "description": "Ensure customer balance does not exceed their credit limit",
        "use_case": "Check Credit",
        "code": "Rule.constraint(validate=Customer,\n                as_condition=lambda row: row.balance <= row.credit_limit,\n                error_msg=\"Customer balance ({row.balance}) exceeds credit limit ({row.credit_limit})\")",
        "error": null,
        "status": "active",
        "entity": "Customer",
        "id": "01JP733V268CKQNJPD728B8Y5H"
    },
    {
        "name": "Customer Balance Sum Rule",
        "description": "Sum of orders where date_shipped is null to derive customer balance",
        "use_case": "Check Credit",
        "code": "Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None)",
        "error": null,
        "status": "active",
        "entity": "Customer",
        "id": "01JP733V29MY8WSZVNH7XA1MJT"
    },
    {
        "name": "Order Amount Total Sum Rule",
        "description": "Calculate order amount total as the sum of item amounts",
        "use_case": "Check Credit",
        "code": "Rule.sum(derive=Order.amount_total, as_sum_of=Item.amount)",
        "error": null,
        "status": "active",
        "entity": "Order",
        "id": "01JP733V2AA51Q598FT9NNAMDN"
    },
    {
        "name": "Item Amount Formula Rule",
        "description": "Calculate item amount based on quantity and unit price",
        "use_case": "Check Credit",
        "code": "Rule.formula(derive=Item.amount, as_expression=lambda row: row.quantity * row.unit_price)",
        "error": null,
        "status": "active",
        "entity": "Item",
        "id": "01JP733V2BMD1W3QZX4RZ92QX1"
    },
    {
        "name": "Item Unit Price Copy Rule",
        "description": "Copy product unit price to item unit price",
        "use_case": "Check Credit",
        "code": "Rule.copy(derive=Item.unit_price, from_parent=Product.unit_price)",
        "error": null,
        "status": "active",
        "entity": "Item",
        "id": "01JP733V2CZX51BKNT6FHPF0N8"
    },
    {
        "name": "Customer Balance Constraint",
        "description": "Ensures the customer's balance is aligned with the credit limit.",
        "use_case": "Customer.balance <= credit_limit",
        "code": "Rule.constraint(validate=Customer,\n                as_condition=lambda row: row.balance <= row.credit_limit,\n                error_msg='Customer balance ({row.balance}) exceeds credit limit ({row.credit_limit})')",
        "error": null,
        "status": "active",
        "entity": null,
        "id": "01JP732EZV7MB5EW8X45B6X8FE"
    },
    {
        "name": "Order Kafka Integration",
        "description": "Sends the order to Kafka topic 'order_shipping' if the date shipped is not None.",
        "use_case": "App Integration",
        "code": "Rule.after_flush_row_event(on_class=Order, calling=kafka_producer.send_row_to_kafka, if_condition=lambda row: row.date_shipped is not None, with_args={\"topic\": \"order_shipping\"})",
        "error": null,
        "status": "active",
        "entity": null,
        "id": "01JP732F0AF6ECED61ENW0PT21"
    },
    {
        "name": "Customer Name Constraint",
        "description": "Ensures the customer's name cannot be 'x'.",
        "use_case": "Customer.name != 'x'",
        "code": "Rule.constraint(validate=Customer, as_condition=lambda row: row.name != 'x', error_msg=\"Customer name cannot be 'x'\")",
        "error": null,
        "status": "active",
        "entity": null,
        "id": "01JP732F0D701XE32B8SJNE0JR"
    },
    {
        "name": "Customer Name Constraint",
        "description": "Ensures that the customer's name cannot be 'y'.",
        "use_case": "Customer.name != 'y'",
        "code": "Rule.constraint(validate=Customer,\n                as_condition=lambda row: row.name != 'y',\n                error_msg=\"Customer name cannot be 'y'\")",
        "error": null,
        "status": "active",
        "entity": null,
        "id": "01JP732F0GBQ2A9KWHVX5AGQNK"
    }
]