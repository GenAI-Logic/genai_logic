Creating project with arguments genai_demo 01JP6P6C0Z9D8E2YG97V3K4JGQ 12 6002 False
Prompt file: /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ/prompt.txt
Working directory: /tmp/tmp.KAFDqniikg-01JP6P6C0Z9D8E2YG97V3K4JGQ
Running: 'als genai --using="/opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ/prompt.txt" --opt-locking=ignored --tables "12"'
create_project: 
create_project: GenAI [_genai_default] creating microservice...
log: Generating Database, Logic, API & Frontend..
create_project: .. .. --using prompt: /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ/prompt.txt
create_project: .. .. in pwd: /tmp/tmp.KAFDqniikg-01JP6P6C0Z9D8E2YG97V3K4JGQ
create_project: .. from file: /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ/prompt.txt
create_project: .. inserted: Use LogicBank to enforce business logic.
create_project: .. inserted explicit test data: Create 4 rows of test data for each table, and follow these guidelines carefully:
create_project: .. Initial Logic enabled: True
create_project: .. saved request: system/genai/temp/request.json
create_project: HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
create_project: ChatGPT (59 secs) - response at: system/genai/temp/chatgpt_original.response
create_project: .. call_chatgpt saved response: system/genai/temp/response.json
create_project: .. used standard genai_demo response: system/genai/examples/genai_demo/genai_demo.response_example
create_project: .. project name: OrderManagementSystem (from response: OrderManagementSystem)
create_project: add description to Customer: Represents a customer in the system with unique name, balance, and credit limit attributes.
create_project: Added description to model: Customer: class Customer(Base):
create_project: """description: Represents a customer in the system with unique name, balance, and credit limit attributes."""
create_project: __tablename__ = 'customer'
create_project: id = Column(Integer, primary_key=True, autoincrement=True)
create_project: name = Column(String, unique=True)
create_project: balance = Column(DECIMAL)
create_project: credit_limit = Column(DECIMAL)
create_project: 
create_project: add description to Order: Represents an order made by a customer, including a notes field.
create_project: Added description to model: Order: class Order(Base):
create_project: """description: Represents an order made by a customer, including a notes field."""
create_project: __tablename__ = 'order'
create_project: id = Column(Integer, primary_key=True, autoincrement=True)
create_project: customer_id = Column(Integer, ForeignKey('customer.id'))
create_project: date_shipped = Column(Date)
create_project: amount_total = Column(DECIMAL)
create_project: notes = Column(String)
create_project: 
create_project: add description to Item: Represents an item in an order, including quantity and pricing details.
create_project: Added description to model: Item: class Item(Base):
create_project: """description: Represents an item in an order, including quantity and pricing details."""
create_project: __tablename__ = 'item'
create_project: id = Column(Integer, primary_key=True, autoincrement=True)
create_project: order_id = Column(Integer, ForeignKey('order.id'))
create_project: product_id = Column(Integer, ForeignKey('product.id'))
create_project: quantity = Column(Integer, nullable=False)
create_project: unit_price = Column(DECIMAL)
create_project: amount = Column(DECIMAL)
create_project: 
create_project: add description to Product: Represents a product available in the system with a unit price.
create_project: Added description to model: Product: class Product(Base):
create_project: """description: Represents a product available in the system with a unit price."""
create_project: __tablename__ = 'product'
create_project: id = Column(Integer, primary_key=True, autoincrement=True)
create_project: name = Column(String)
create_project: unit_price = Column(DECIMAL)
create_project: 
create_project: .... test_data_rows: 16
create_project: .. code for db creation and test data: system/genai/temp/create_db_models.py
create_project: .. saving work files to: system/genai/temp/OrderManagementSystem
create_project: save_prompt_messages_to_system_genai_temp_project() - /tmp/tmp.KAFDqniikg-01JP6P6C0Z9D8E2YG97V3K4JGQ/system/genai/temp/OrderManagementSystem
create_project: .. saving[000_you_are.prompt]  - You are a data modelling exper...
create_project: .. saving[001_logic_training.prompt]  - Here is the simplified API for...
create_project: .. saving[002_create_db_models.prompt]  - Use SQLAlchemy to create a sql...
create_project: .. saving response [003_create_db_models.response]  - Use SQLAlchemy to create a sql...
create_project: ..cwd: /tmp/tmp.KAFDqniikg-01JP6P6C0Z9D8E2YG97V3K4JGQ
create_project: 
create_project: ..docker using default directory: /tmp/tmp.KAFDqniikg-01JP6P6C0Z9D8E2YG97V3K4JGQ/OrderManagementSystem
create_project: 
create_project: .. fixed hallucination/indent:     Rule.constraint(validate=Customer,
create_project: .. found class: Customer in: Rule.constraint(validate=Customer,
create_project: .. fixed hallucination/indent:     Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None)
create_project: .. found class: Customer in: Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None)
create_project: .. found class: Order in: Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None)
create_project: .. fixed hallucination/indent:     Rule.sum(derive=Order.amount_total, as_sum_of=Item.amount)
create_project: .. found class: Order in: Rule.sum(derive=Order.amount_total, as_sum_of=Item.amount)
create_project: .. found class: Item in: Rule.sum(derive=Order.amount_total, as_sum_of=Item.amount)
create_project: .. fixed hallucination/indent:     Rule.formula(derive=Item.amount, as_expression=lambda row: row.quantity * row.unit_price)
create_project: .. found class: Item in: Rule.formula(derive=Item.amount, as_expression=lambda row: row.quantity * row.unit_price)
create_project: .. fixed hallucination/indent:     Rule.copy(derive=Item.unit_price, from_parent=Product.unit_price)
create_project: .. found class: Item in: Rule.copy(derive=Item.unit_price, from_parent=Product.unit_price)
create_project: .. found class: Product in: Rule.copy(derive=Item.unit_price, from_parent=Product.unit_price)
create_project: .. fixed hallucination/indent:     Rule.after_flush_row_event(on_class=Order, calling=kafka_producer.send_row_to_kafka, if_condition=lambda row: row.date_shipped is not None, with_args={"topic": "order_shipping"})
create_project: 
create_project: Project created.  Next steps:
create_project: 
create_project: $ ApiLogicServer run      # Run created API and Admin App, or
create_project: 
create_project: Customize using IDE on local machine:
create_project: exit     # exit the Docker container
create_project: code <local machine directory for: OrderManagementSystem>  # e.g., open VSCode on created project
create_project: 
create_project: 
create_project: GENAI (60 secs) successful on try 1
log: Model Generation Successful
create_project: 
create_project: 
create_project: Welcome to API Logic Server, 14.03.15
create_project: 
create_project: creating in manager: sqlite:///system/genai/temp/create_db_models.sqlite
create_project: 
Waiting for background tasks to complete.. (in /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ)
[1]   Running                 create_spa &
[2]-  Running                 gen_descriptions &
[3]+  Running                 cleanup &
+ manager -jp 01JP6P6C0Z9D8E2YG97V3K4JGQ
+ PYTHONPATH=/opt/webgenai
+ python /opt/webgenai/database/manager.py -jp 01JP6P6C0Z9D8E2YG97V3K4JGQ
Background tasks completed
log: Project created, starting..
+ [[ ! -f /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ/docs/db.dbml ]]
+ dbml-renderer -i /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ/docs/db.dbml -o /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ/ui/dber.svg
log: Creating sample data..
+ set +x
setting chatgpt_retry.response
log: Verifying Rules..
Added rule: 01JP6P8GRHJ32CDDV4WPDF0BW3 'Ensures the customer's balance is aligned with the credit limit.'
Added rule: 01JP6P8GRKTFF4Z7TGQ36SQGXC 'Calculates the customer's balance as the sum of orders' amount_total where date_shipped is null.'
Added rule: 01JP6P8GRMGP47QXHT1P69G4PP 'Calculates order's amount_total as the sum of item amounts.'
Added rule: 01JP6P8GRNE36AS7MJTJNK1QX5 'Calculates item amount as quantity multiplied by unit price.'
Added rule: 01JP6P8GRNXHD52WBZC24A6SF3 'Copies the product's unit price to the item.'
Added rule: 01JP6P8GRPP3938T7X520BRKZP 'Sends the order to Kafka topic 'order_shipping' if the date shipped is not None.'
+ manager -jp 01JP6P6C0Z9D8E2YG97V3K4JGQ
+ PYTHONPATH=/opt/webgenai
+ python /opt/webgenai/database/manager.py -jp 01JP6P6C0Z9D8E2YG97V3K4JGQ
+ [[ ! -f /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ/docs/db.dbml ]]
+ dbml-renderer -i /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ/docs/db.dbml -o /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ/ui/dber.svg
+ set +x
log: Starting Project..
run_log: 
log: Starting Project..
run_log: API Logic Project Server Setup (01JP6P6C0Z9D8E2YG97V3K4JGQ) Starting with CLI args:
run_log: .. api_logic_server_run.py
run_log: 
run_log: Created August 03, 2024 09:34:01 at /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ
run_log: 
run_log: Data Model Loaded, customizing...
run_log: ..discovered models: []
run_log: LogicBank Activation - declare_logic.py
run_log: Loading rules from /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ/logic/wg_rules
run_log: 01JP6P8GRHJ32CDDV4WPDF0BW3 rule file: logic/wg_rules/Customer_Balance_Constraint.py
run_log: 01JP6P8GRKTFF4Z7TGQ36SQGXC rule file: logic/wg_rules/Customer_Balance_Derivation.py
run_log: 01JP6P8GRMGP47QXHT1P69G4PP rule file: logic/wg_rules/Order_Amount_Total_Derivation.py
run_log: 01JP6P8GRNE36AS7MJTJNK1QX5 rule file: logic/wg_rules/Item_Amount_Derivation.py
run_log: 01JP6P8GRNXHD52WBZC24A6SF3 rule file: logic/wg_rules/Copy_Item_Unit_Price.py
run_log: 01JP6P8GRPP3938T7X520BRKZP rule file: logic/wg_rules/Order_Kafka_Integration.py
run_log: [32mLoading Rule Module Customer_Balance_Constraint 01JP6P8GRHJ32CDDV4WPDF0BW3 [0m
run_log: [32mLoading Rule Module Customer_Balance_Derivation 01JP6P8GRKTFF4Z7TGQ36SQGXC [0m
run_log: [32mLoading Rule Module Order_Amount_Total_Derivation 01JP6P8GRMGP47QXHT1P69G4PP [0m
run_log: [32mLoading Rule Module Item_Amount_Derivation 01JP6P8GRNE36AS7MJTJNK1QX5 [0m
run_log: [32mLoading Rule Module Copy_Item_Unit_Price 01JP6P8GRNXHD52WBZC24A6SF3 [0m
run_log: [32mLoading Rule Module Order_Kafka_Integration 01JP6P8GRPP3938T7X520BRKZP [0m
run_log: 
run_log: The following rules have been loaded
run_log: Rule Bank[0xffff94bd1460] (loaded 2025-03-13 02:45:17.563405)
run_log: Mapped Class[Customer] rules:
run_log: Constraint Function: None
run_log: Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function init_rule.<locals>.<lambda> at 0xffff92109760>)
run_log: Mapped Class[Order] rules:
run_log: Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)
run_log: RowEvent Order.send_row_to_kafka()
run_log: Mapped Class[Item] rules:
run_log: Derive <class 'database.models.Item'>.amount as Formula (-1): Rule.formula(derive=Item.amount, as_expression=la [...]
run_log: Derive <class 'database.models.Item'>.unit_price as Copy(product.unit_price)
run_log: 
run_log: The following attributes have been referenced
run_log: 
run_log: ..Customer.balance: constraint
run_log: ..Customer.credit_limit: constraint
run_log: ..Customer.balance: aggregate derivation
run_log: ..Order.date_shipped: aggregate where clause
run_log: ..Order.amount_total: sum derived from
run_log: ..Order.amount_total: aggregate derivation
run_log: ..Item.amount: sum derived from
run_log: ..Item.quantity: - formula
run_log: ..Item.unit_price: - formula
run_log: ..Item.unit_price: parent copy derivation
run_log: ..Product.unit_price: parent copy from
run_log: 
run_log: The following rules have been activated
run_log: Rule Bank[0xffff94bd1460] (loaded 2025-03-13 02:45:17.563405)
run_log: Mapped Class[Customer] rules:
run_log: Constraint Function: None
run_log: Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function init_rule.<locals>.<lambda> at 0xffff92109760>)
run_log: Mapped Class[Order] rules:
run_log: Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)
run_log: RowEvent Order.send_row_to_kafka()
run_log: Mapped Class[Item] rules:
run_log: Derive <class 'database.models.Item'>.amount as Formula (1): Rule.formula(derive=Item.amount, as_expression=la [...]
run_log: Derive <class 'database.models.Item'>.unit_price as Copy(product.unit_price)
run_log: Logic Bank 01.20.26 - 10 rules loaded
run_log: Exposing /Customer
run_log: Exposing /Item
run_log: Exposing /Order
run_log: Exposing /Product
run_log: Declare   API - api/expose_api_models, endpoint for each table on localhost:8282, customizing...
run_log: ..discovered services: ['ontimize_api.py', 'system.py', 'new_service.py', 'newer_service.py']
run_log: Kafka Consumer not activated
run_log: 
run_log: API Logic Project loaded (not WSGI), version: 14.03.15
run_log: .. startup message: normal start
run_log: (running from docker container at flask_host: 0.0.0.0 - may require refresh)
run_log: 
run_log: API Logic Project (name: 01JP6P6C0Z9D8E2YG97V3K4JGQ) starting:
log: Project Running!
run_log: ..Explore data and API at http_scheme://swagger_host:port http://localhost:6002   *
run_log: .... with flask_host: 0.0.0.0
run_log: .... and  swagger_port: 8282
run_log: 
run_log: Alert: These following are **Critical** to unlocking value for project: 01JP6P6C0Z9D8E2YG97V3K4JGQ:
run_log: .. see logic.declare_logic.py       --
run_log: .. see security.declare_security.py -- ALERT:  *** Security Not Enabled ***
run_log: 
run_log: 
run_log: *************************************************************************
run_log: *   Startup Instructions: Open your Browser at: http://localhost:6002   *
run_log: *************************************************************************
run_log: 
run_log: * Serving Flask app 'API Logic Server'
run_log: * Debug mode: on
run_log: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
run_log: * Running on all addresses (0.0.0.0)
run_log: * Running on http://127.0.0.1:6002
run_log: * Running on http://172.17.0.2:6002
run_log: [33mPress CTRL+C to quit[0m
run_log: * Restarting with stat
run_log: 
run_log: API Logic Project Server Setup (01JP6P6C0Z9D8E2YG97V3K4JGQ) Starting with CLI args:
run_log: .. api_logic_server_run.py
run_log: 
run_log: Created August 03, 2024 09:34:01 at /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ
run_log: 
run_log: Data Model Loaded, customizing...
run_log: ..discovered models: []
run_log: LogicBank Activation - declare_logic.py
run_log: Loading rules from /opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ/logic/wg_rules
run_log: 01JP6P8GRHJ32CDDV4WPDF0BW3 rule file: logic/wg_rules/Customer_Balance_Constraint.py
run_log: 01JP6P8GRKTFF4Z7TGQ36SQGXC rule file: logic/wg_rules/Customer_Balance_Derivation.py
run_log: 01JP6P8GRMGP47QXHT1P69G4PP rule file: logic/wg_rules/Order_Amount_Total_Derivation.py
run_log: 01JP6P8GRNE36AS7MJTJNK1QX5 rule file: logic/wg_rules/Item_Amount_Derivation.py
run_log: 01JP6P8GRNXHD52WBZC24A6SF3 rule file: logic/wg_rules/Copy_Item_Unit_Price.py
run_log: 01JP6P8GRPP3938T7X520BRKZP rule file: logic/wg_rules/Order_Kafka_Integration.py
run_log: [32mLoading Rule Module Customer_Balance_Constraint 01JP6P8GRHJ32CDDV4WPDF0BW3 [0m
run_log: [32mLoading Rule Module Customer_Balance_Derivation 01JP6P8GRKTFF4Z7TGQ36SQGXC [0m
run_log: [32mLoading Rule Module Order_Amount_Total_Derivation 01JP6P8GRMGP47QXHT1P69G4PP [0m
run_log: [32mLoading Rule Module Item_Amount_Derivation 01JP6P8GRNE36AS7MJTJNK1QX5 [0m
run_log: [32mLoading Rule Module Copy_Item_Unit_Price 01JP6P8GRNXHD52WBZC24A6SF3 [0m
run_log: [32mLoading Rule Module Order_Kafka_Integration 01JP6P8GRPP3938T7X520BRKZP [0m
run_log: 
run_log: The following rules have been loaded
run_log: Rule Bank[0xffffa1d31040] (loaded 2025-03-13 02:45:18.120593)
run_log: Mapped Class[Customer] rules:
run_log: Constraint Function: None
run_log: Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function init_rule.<locals>.<lambda> at 0xffffa122d760>)
run_log: Mapped Class[Order] rules:
run_log: Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)
run_log: RowEvent Order.send_row_to_kafka()
run_log: Mapped Class[Item] rules:
run_log: Derive <class 'database.models.Item'>.amount as Formula (-1): Rule.formula(derive=Item.amount, as_expression=la [...]
run_log: Derive <class 'database.models.Item'>.unit_price as Copy(product.unit_price)
run_log: 
run_log: The following attributes have been referenced
run_log: 
run_log: ..Customer.balance: constraint
run_log: ..Customer.credit_limit: constraint
run_log: ..Customer.balance: aggregate derivation
run_log: ..Order.date_shipped: aggregate where clause
run_log: ..Order.amount_total: sum derived from
run_log: ..Order.amount_total: aggregate derivation
run_log: ..Item.amount: sum derived from
run_log: ..Item.quantity: - formula
run_log: ..Item.unit_price: - formula
run_log: ..Item.unit_price: parent copy derivation
run_log: ..Product.unit_price: parent copy from
run_log: 
run_log: The following rules have been activated
run_log: Rule Bank[0xffffa1d31040] (loaded 2025-03-13 02:45:18.120593)
run_log: Mapped Class[Customer] rules:
run_log: Constraint Function: None
run_log: Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function init_rule.<locals>.<lambda> at 0xffffa122d760>)
run_log: Mapped Class[Order] rules:
run_log: Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)
run_log: RowEvent Order.send_row_to_kafka()
run_log: Mapped Class[Item] rules:
run_log: Derive <class 'database.models.Item'>.amount as Formula (1): Rule.formula(derive=Item.amount, as_expression=la [...]
run_log: Derive <class 'database.models.Item'>.unit_price as Copy(product.unit_price)
run_log: Logic Bank 01.20.26 - 10 rules loaded
run_log: Exposing /Customer
run_log: Exposing /Item
run_log: Exposing /Order
run_log: Exposing /Product
run_log: Declare   API - api/expose_api_models, endpoint for each table on localhost:8282, customizing...
run_log: ..discovered services: ['ontimize_api.py', 'system.py', 'new_service.py', 'newer_service.py']
run_log: Kafka Consumer not activated
run_log: 
run_log: API Logic Project loaded (not WSGI), version: 14.03.15
run_log: .. startup message: normal start
run_log: (running from docker container at flask_host: 0.0.0.0 - may require refresh)
run_log: 
run_log: API Logic Project (name: 01JP6P6C0Z9D8E2YG97V3K4JGQ) starting:
log: Project Running!
run_log: ..Explore data and API at http_scheme://swagger_host:port http://localhost:6002   *
run_log: .... with flask_host: 0.0.0.0
run_log: .... and  swagger_port: 8282
run_log: 
run_log: Alert: These following are **Critical** to unlocking value for project: 01JP6P6C0Z9D8E2YG97V3K4JGQ:
run_log: .. see logic.declare_logic.py       --
run_log: .. see security.declare_security.py -- ALERT:  *** Security Not Enabled ***
run_log: 
run_log: 
run_log: *************************************************************************
run_log: *   Startup Instructions: Open your Browser at: http://localhost:6002   *
run_log: *************************************************************************
run_log: 
run_log: * Debugger is active!
run_log: * Debugger PIN: 166-224-166
run_log: 127.0.0.1 - - [13/Mar/2025 02:45:25] "GET /ui/admin/admin.yaml?v=1741833925910 HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:45:26] "GET /ui/admin/admin.yaml?v=1741833926160 HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:45:26] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/SPAPage?include=SectionList&page[limit]=10&page[number]=1&page[offset]=0&page[size]=10&sort=name HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:45:26] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Customer?include=%2Ball&page[limit]=5&page[number]=1&page[offset]=0&page[size]=5&sort=name HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:45:26] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Product?include=%2Ball&page[limit]=5&page[number]=1&page[offset]=0&page[size]=5&sort=name HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:45:26] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Item?include=order,product,order,product,%2Ball&page[limit]=5&page[number]=1&page[offset]=0&page[size]=5&sort=id HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:45:26] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Order?include=customer,customer,%2Ball&page[limit]=5&page[number]=1&page[offset]=0&page[size]=5&sort=id HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:08] "GET /ui/admin/admin.yaml?v=1741833968465 HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:18] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Customer?include=&page[limit]=25&page[number]=1&page[offset]=0&page[size]=25&sort=-id HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:18] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Customer?include=&page[limit]=25&page[number]=1&page[offset]=0&page[size]=25&sort=name HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:20] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Customer/1?include=OrderList,OrderList&page[limit]=2 HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:20] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Customer/1?include=OrderList,OrderList&page[limit]=2 HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:20] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Order?filter[customer_id]=1&page[limit]=25&page[offset]=0&sort=-id&include=ItemList,customer,ItemList,customer HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:22] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Customer/1?include=OrderList,OrderList&page[limit]=2 HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:22] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Order/1?include=ItemList,customer,ItemList,customer&page[limit]=2 HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:22] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Order/1?include=ItemList,customer,ItemList,customer&page[limit]=2 HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:22] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Customer/1?include=OrderList,OrderList&page[limit]=2 HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:22] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Item?filter[order_id]=1&page[limit]=25&page[offset]=0&sort=-id&include=order,product,order,product HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:22] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Customer/1?include=OrderList,OrderList&page[limit]=2 HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:22] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Product/1?include=ItemList,ItemList&page[limit]=2 HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:25] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Product?include=&page[limit]=25&page[number]=1&page[offset]=0&page[size]=25&sort=-id HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:25] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Order?include=customer,customer&page[limit]=25&page[number]=1&page[offset]=0&page[size]=25&sort=-id HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:25] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Product?filter[id]=1&include=&page[limit]=10&page[number]=1&page[offset]=0&page[size]=10&sort=name HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:25] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Order?filter[id]=1&include=customer,customer&page[limit]=10&page[number]=1&page[offset]=0&page[size]=10&sort=id HTTP/1.0" 200 -
run_log: 
run_log: Logic Phase:		ROW LOGIC		(session=0xffffa06250a0) (sqlalchemy before_flush)
run_log: ..Item[1] {Update - client} id: 1, order_id: 1, product_id: 1, quantity:  [3-->] 3444, unit_price: 50, amount: 150  row: 0xffffa060f710  session: 0xffffa06250a0  ins_upd_dlt: upd, initial: upd
run_log: ..Item[1] {Formula amount} id: 1, order_id: 1, product_id: 1, quantity:  [3-->] 3444, unit_price: 50, amount:  [150-->] 172200  row: 0xffffa060f710  session: 0xffffa06250a0  ins_upd_dlt: upd, initial: upd
run_log: ....Order[1] {Update - Adjusting order: amount_total} id: 1, customer_id: 1, date_shipped: None, amount_total:  [150.0000000000-->] 172200.0000000000, notes: Order 1 notes  row: 0xffffa0625ca0  session: 0xffffa06250a0  ins_upd_dlt: upd, initial: upd
run_log: ......Customer[1] {Update - Adjusting customer: balance} id: 1, name: Customer 1, balance:  [150.0000000000-->] 172200.0000000000, credit_limit: 1000.0000000000  row: 0xffffa06270b0  session: 0xffffa06250a0  ins_upd_dlt: upd, initial: upd
run_log: ......Customer[1] {Constraint Failure: Customer balance (172200.0000000000) exceeds credit limit (1000.0000000000)} id: 1, name: Customer 1, balance:  [150.0000000000-->] 172200.0000000000, credit_limit: 1000.0000000000  row: 0xffffa06270b0  session: 0xffffa06250a0  ins_upd_dlt: upd, initial: upd
run_log: 
run_log: These Rules Fired (see Logic Phases, above, for actual order):		##
run_log: Customer		##
run_log: 1. Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function init_rule.<locals>.<lambda> at 0xffffa122d760>)		##
run_log: 2. Constraint Function: None 		##
run_log: Item		##
run_log: 3. Derive <class 'database.models.Item'>.amount as Formula (1): Rule.formula(derive=Item.amount, as_expression=la [...]		##
run_log: Order		##
run_log: 4. Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)		##
run_log: 
run_log: Traceback (most recent call last):
run_log: File "/usr/local/lib/python3.12/site-packages/safrs/safrs_api.py", line 674, in method_wrapper
run_log: result = fun(*args, **kwargs)
run_log: ^^^^^^^^^^^^^^^^^^^^
run_log: File "/usr/local/lib/python3.12/site-packages/safrs/jsonapi.py", line 324, in patch
run_log: instance = self._patch_instance(data, id)
run_log: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
run_log: File "/usr/local/lib/python3.12/site-packages/safrs/jsonapi.py", line 360, in _patch_instance
run_log: instance._s_patch(**attributes)
run_log: File "/usr/local/lib/python3.12/site-packages/safrs/base.py", line 485, in _s_patch
run_log: safrs.DB.session.commit()
run_log: File "/usr/local/lib/python3.12/site-packages/sqlalchemy/orm/scoping.py", line 553, in commit
run_log: return self._proxied.commit()
run_log: ^^^^^^^^^^^^^^^^^^^^^^
run_log: File "/usr/local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1906, in commit
run_log: trans.commit(_to_root=True)
run_log: File "<string>", line 2, in commit
run_log: File "/usr/local/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py", line 137, in _go
run_log: ret_value = fn(self, *arg, **kw)
run_log: ^^^^^^^^^^^^^^^^^^^^
run_log: File "/usr/local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1221, in commit
run_log: self._prepare_impl()
run_log: File "<string>", line 2, in _prepare_impl
run_log: File "/usr/local/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py", line 137, in _go
run_log: ret_value = fn(self, *arg, **kw)
run_log: ^^^^^^^^^^^^^^^^^^^^
run_log: File "/usr/local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1196, in _prepare_impl
run_log: self.session.flush()
run_log: File "/usr/local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4154, in flush
run_log: self._flush(objects)
run_log: File "/usr/local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4183, in _flush
run_log: self.dispatch.before_flush(self, flush_context, objects)
run_log: File "/usr/local/lib/python3.12/site-packages/sqlalchemy/event/attr.py", line 378, in __call__
run_log: fn(*args, **kw)
run_log: File "/usr/local/lib/python3.12/site-packages/logic_bank/exec_trans_logic/listeners.py", line 65, in before_flush
run_log: logic_row.update(reason="client")
run_log: File "/usr/local/lib/python3.12/site-packages/logic_bank/exec_row_logic/logic_row.py", line 1250, in update
run_log: self._adjust_parent_aggregates()  # parent chaining (sum / count adjustments)
run_log: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
run_log: File "/usr/local/lib/python3.12/site-packages/logic_bank/exec_row_logic/logic_row.py", line 1189, in _adjust_parent_aggregates
run_log: parent_adjuster.save_altered_parents(do_not_adjust_list=do_not_adjust_list)  # iff req'd (altered only)
run_log: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
run_log: File "/usr/local/lib/python3.12/site-packages/logic_bank/exec_row_logic/logic_row.py", line 1407, in save_altered_parents
run_log: parent_logic_row.update(
run_log: File "/usr/local/lib/python3.12/site-packages/logic_bank/exec_row_logic/logic_row.py", line 1250, in update
run_log: self._adjust_parent_aggregates()  # parent chaining (sum / count adjustments)
run_log: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
run_log: File "/usr/local/lib/python3.12/site-packages/logic_bank/exec_row_logic/logic_row.py", line 1189, in _adjust_parent_aggregates
run_log: parent_adjuster.save_altered_parents(do_not_adjust_list=do_not_adjust_list)  # iff req'd (altered only)
run_log: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
run_log: File "/usr/local/lib/python3.12/site-packages/logic_bank/exec_row_logic/logic_row.py", line 1407, in save_altered_parents
run_log: parent_logic_row.update(
run_log: File "/usr/local/lib/python3.12/site-packages/logic_bank/exec_row_logic/logic_row.py", line 1251, in update
run_log: self._constraints()
run_log: File "/usr/local/lib/python3.12/site-packages/logic_bank/exec_row_logic/logic_row.py", line 795, in _constraints
run_log: each_constraint.execute(self)
run_log: File "/usr/local/lib/python3.12/site-packages/logic_bank/rule_type/constraint.py", line 87, in execute
run_log: ll.constraint_event(message=msg, logic_row=logic_row, constraint=self)
run_log: File "/opt/projects/by-ulid/01JP6P6C0Z9D8E2YG97V3K4JGQ/config/server_setup.py", line 282, in constraint_handler
run_log: raise ValidationErrorExt(message=message, detail=detail)
run_log: config.server_setup.ValidationErrorExt
run_log: 127.0.0.1 - - [13/Mar/2025 02:46:30] "[31m[1mPATCH /01JP6P6C0Z9D8E2YG97V3K4JGQ/Item/1 HTTP/1.0[0m" 400 -
run_log: 127.0.0.1 - - [13/Mar/2025 06:24:19] "GET /ui/admin/admin.yaml?v=1741847059897 HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 06:24:20] "GET /ui/admin/admin.yaml?v=1741847060144 HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 06:24:20] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/SPAPage?include=SectionList&page[limit]=10&page[number]=1&page[offset]=0&page[size]=10&sort=name HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 06:24:20] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Item?include=order,product,order,product,%2Ball&page[limit]=5&page[number]=1&page[offset]=0&page[size]=5&sort=id HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 06:24:20] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Customer?include=%2Ball&page[limit]=5&page[number]=1&page[offset]=0&page[size]=5&sort=name HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 06:24:20] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Product?include=%2Ball&page[limit]=5&page[number]=1&page[offset]=0&page[size]=5&sort=name HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 06:24:20] "GET /01JP6P6C0Z9D8E2YG97V3K4JGQ/Order?include=customer,customer,%2Ball&page[limit]=5&page[number]=1&page[offset]=0&page[size]=5&sort=id HTTP/1.0" 200 -
run_log: 127.0.0.1 - - [13/Mar/2025 06:24:22] "GET /ui/admin/admin.yaml?v=1741847062390 HTTP/1.0" 200 -
